# Welcome to your prefect.yaml file! You can you this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: deploy
prefect-version: 2.10.20

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: bruceleo31/gcp_deploy
    tag: latest
    dockerfile: Dockerfile

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.set_working_directory:
    directory: /opt/prefect/

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: econ-deployment
  version: null
  tags: []
  description: null
  schedule:
    cron: 0 0 * * *
    timezone: null
    day_or: true
  flow_name: null
  entrypoint: flows/econ_to_gcp.py:etl_econ_parent_flow
parameter_openapi_schema:
  title: Parameters
  type: object
  properties:
    years:
      title: years
      position: 0
      type: array
      items:
        type: integer
    states_list:
      title: states_list
      position: 1
      type: array
      items:
        type: string
  required:
  - years
  - states_list
  definitions: null
  work_pool:
    name: production-pool
    work_queue_name: 
    job_variables:
      image: '{{ build_image.image }}'

- name: demo-deployment
  version: null
  tags: []
  description: null
  schedule:
    cron: 0 0 * * *
    timezone: null
    day_or: true
  flow_name: null
  entrypoint: flows/demo_to_gcp.py:etl_demo_parent_flow
parameter_openapi_schema:
  title: Parameters
  type: object
  properties:
    years:
      title: years
      position: 0
      type: array
      items:
        type: integer
    states_list:
      title: states_list
      position: 1
      type: array
      items:
        type: string
  required:
  - years
  - states_list
  definitions: null
  work_pool:
    name: production-pool
    work_queue_name: 
    job_variables:
      image: '{{ build_image.image }}'

- name: geo-deployment
  version: null
  tags: []
  description: null
  schedule:
    cron: 0 0 * * *
    timezone: null
    day_or: true  
  flow_name: null
  entrypoint: flows/geo_to_gcp.py:etl_geo_parent_flow
parameter_openapi_schema:
  title: Parameters
  type: object
  properties:
    years:
      title: years
      position: 0
      type: array
      items:
        type: integer
    states_list:
      title: states_list
      position: 1
      type: array
      items:
        type: string
  required:
  - years
  - states_list
  definitions: null
  work_pool:
    name: production-pool
    work_queue_name: 
    job_variables:
      image: '{{ build_image.image }}'

- name: realestate-deployment
  version: null
  tags: []
  description: null
  schedule:
    cron: 0 0 * * *
    timezone: null
    day_or: true 
  flow_name: null
  entrypoint: flows/geo_to_gcp.py:etl_geo_parent_flow
parameter_openapi_schema:
  title: Parameters
  type: object
  properties:
    years:
      title: years
      position: 0
      type: array
      items:
        type: integer
    states_list:
      title: states_list
      position: 1
      type: array
      items:
        type: string
  required:
  - years
  - states_list
  definitions: null
  work_pool:
    name: production-pool
    work_queue_name: 
    job_variables:
      image: '{{ build_image.image }}'