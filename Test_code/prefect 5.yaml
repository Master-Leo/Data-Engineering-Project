# Welcome to your prefect.yaml file! You can you this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: deploy
prefect-version: 2.10.20

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: bruceleo31/project
    tag: census
    dockerfile: auto

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'
- prefect_gcp.deployments.steps.push_to_gcs:
    id: push_code
    requires: prefect-gcp>=0.4.3
    bucket: de_final_project_bucket
    folder: deploy

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect_gcp.deployments.steps.pull_from_gcs:
    id: pull_code
    requires: prefect-gcp>=0.4.3
    bucket: '{{ push_code.bucket }}'
    folder: '{{ push_code.folder }}'

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: econ_deployment
  # tags: []
  # description: 
  schedule: {}
  # flow_name: null
  entrypoint: econ_to_gcp.py:etl_econ_parent_flow
  # parameters: {}
  work_pool:
    name: production-pool
    work_queue_name: null
    job_variables:
      image: '{{ build_image.image }}'

- name: demo_deployment
  # description: 
  schedule: {}
  # flow_name: null
  entrypoint: demo_to_gcp.py:etl_demo_parent_flow
  # parameters: {}
  work_pool:
    name: production-pool
    work_queue_name: null
    job_variables:
      image: '{{ build_image.image }}'

- name: geo_deployment
  # description: 
  schedule: {}
  # flow_name: null
  entrypoint: geo_to_gcp.py:etl_geo_parent_flow
  # parameters: {}
  work_pool:
    name: production-pool
    work_queue_name: null
    job_variables:
      image: '{{ build_image.image }}'
